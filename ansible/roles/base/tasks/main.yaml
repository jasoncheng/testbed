- name: If pi4 do something...
  ansible.builtin.include_role:
    name: base
    tasks_from: pi4
  when: is_centos7_pi or is_centos9_pi

- name: Upgrade all package
  ansible.builtin.include_role:
    name: base
    tasks_from: pkg-upgrade

- name: Install package
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items:
  - python3
  - python3-pip
  - net-tools
  - nmap
  - tree
  - curl
  - acl
  ignore_errors: true

- name: Install package ubuntu only
  ansible.builtin.package: name="{{ item }}" state=latest
  with_items:
  - snapd
  - openjdk-11-jdk
  - apt-transport-https
  - hey
  - iftop
  - iotop
  - htop
  when: is_ubuntu_os

- name: Install package CentOS only
  ansible.builtin.package: name="{{ item }}" state=latest
  with_items:
  - libxslt-devel
  - libxml2-devel
  - bind-utils
  - epel-release
  when: is_cent_os

- name: Pip3 package install exclude pi w/ centos7
  ansible.builtin.pip:
    state: latest
    name:
    - ssh_config
    - stormssh
    - snap
    - lxml
  when: not is_centos7_pi

- name: Docker
  ansible.builtin.include_role:
    name: docker
    tasks_from: install

- name: Hostname
  tags: ["base", "always"]
  ansible.builtin.include_role:
    name: base
    tasks_from: hosts.yml

# - name: Touch env file
#   ansible.builtin.file:
#     mode: 0755
#     path: "{{ ENV_FILE_SOURCE }}"
#     state: absent

# - name: Set {{ ENV_FILE_SOURCE }} for all user
#   ansible.builtin.blockinfile:
#     insertafter: EOF
#     dest: "{{ ENV_FILE_SOURCE }}"
#     block: |
#       export {{ item.name }}="{{ item.line }}"
#     marker: "\n# {mark} Ansible manage block {{ item.name }}"
#     # backup: true
#   with_items:
#     - { name: "JAVA_HOME", line: "{{ JAVA_HOME }}" }
#     - { name: "HADOOP_HOME", line: "{{ HADOOP_HOME }}" }
#     - { name: "HBASE_HOME", line: "{{ HBASE_HOME }}" }
#     - { name: "ZK_HOME", line: "{{ ZK_HOME }}" }
#     - { name: "KAFKA_HOME", line: "{{ KAFKA_HOME }}" }
#     - { name: "HDFS_NAMENODE_USER", line: "root" }
#     - { name: "HDFS_DATANODE_USER", line: "root" }
#     - { name: "HDFS_SECONDARYNAMENODE_USER", line: "root" }
#     - { name: "YARN_RESOURCEMANAGER_USER", line: "root" }
#     - { name: "YARN_NODEMANAGER_USER", line: "root" }
#     - { name: "HBASE_MANAGES_ZK", line: "{{ HBASE_MANAGES_ZK }}" }
#     - { name: "HADOOP_CLASSPATH", line: "${JAVA_HOME}/lib/tools.jar" }
#     - {
#         name: "PATH",
#         line: "$PATH:$JAVA_HOME/bin:$HADOOP_HOME/sbin:$HADOOP_HOME/bin:{{ HBASE_HOME }}/bin:$ZK_HOME/bin:$KAFKA_HOME/bin:/snap/bin",
#       }
#   when: not is_centos9_pi

- name: Config Remote SSH
  tags: ["base", "always"]
  ansible.builtin.include_role:
    name: base
    tasks_from: ssh-servers.yml

- name: Config Local SSH
  when: inventory_hostname == groups['nodes'][0]
  tags: ["base", "always"]
  ansible.builtin.include_role:
    name: base
    tasks_from: ssh-local.yml

- name: Reboot
  ansible.builtin.include_role:
    name: base
    tasks_from: reboot.yml

- name: Set timezone
  ansible.builtin.timezone:
    name: "Asia/Taipei"
