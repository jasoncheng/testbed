- name: Debug info
  ansible.builtin.debug:
    msg: "{{ extra_init_args }}"

- name: Initialize cluster
  become: true
  become_user: root
  ansible.builtin.command: "kubeadm init --pod-network-cidr={{ K8S_CIDRBLOCK }} --ignore-preflight-errors=cri {{ extra_init_args }}"
  args:
    chdir: $HOME
    creates: cluster_initialized.txt
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0 and result.stderr is defined and ('is in use' not in result.stderr or 'already exists' not in result.stderr)

- name: Wait for admin.conf generated
  become: true
  become_user: root
  ansible.builtin.wait_for:
    path: /etc/kubernetes/admin.conf

- name: Copy admin.conf to user's kube config
  become: true
  become_user: root
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ item.path }}"
    remote_src: true
    owner: "{{ item.owner }}"
    mode: 0600
  register: result
  when: K8S_USER != 'root' or '/home/root' not in item.path
  with_items:
  - { "owner": "root", "path": "/root/.kube/config" }
  - { "owner": "{{ K8S_USER }}", "path": "/home/{{ K8S_USER }}/.kube/config" }

- name: Install Pod network
  become_user: "{{ K8S_USER }}"
  ansible.builtin.shell: |
    # kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
    kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  args:
    chdir: $HOME
  when: "inventory_hostname in groups['k8sM']"
  register: result
  until: result.rc == 0
  retries: 12
  delay: 10
  ignore_errors: true

- name: Get join token
  become_user: "{{ K8S_USER }}"
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: k8s_join_result

- name: Get cert if necessary
  become_user: root
  ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs | tail -1
  when: enable_k8s_ha_mode
  register: result

- name: Set certificate-key 
  ansible.builtin.set_fact:
    cert_key: "{{ '' if result is not defined or result.stdout is not defined else '--certificate-key '+result.stdout}}"
  when: enable_k8s_ha_mode

- name: Debug
  ansible.builtin.debug:
    msg:
      - "result {{ result }}"
      - "enable_k8s_ha_mode {{ enable_k8s_ha_mode }}"
      - "certificate-key  {{ '' if cert_key is not defined else cert_key }}"

- name: Check local user
  ansible.builtin.set_fact:
    localUser: "{{ lookup('env', 'USER') }}"
    k8s_join_command: "{{ k8s_join_result.stdout_lines[0] }} {{ '' if cert_key is not defined else cert_key }}"

- name: Save command to file in your local
  become: false
  ansible.builtin.copy:
    content: "{{ k8s_join_command }}"
    dest: "{{ k8s_join_command_file }}"
    mode: 0777
  delegate_to: localhost