---
- name: Prepare env
  hosts: all
  tags: ["always"]
  gather_facts: true
  tasks:
  - name: Set global variable
    ansible.builtin.set_fact:
      is_cent_os: "{{ ansible_distribution == 'CentOS' }}"
      is_ubuntu_os: "{{ ansible_distribution == 'Ubuntu' }}"
      os_version: "{{ ansible_distribution_version }}"
      is_pi4: "{{ groups['pi'] is defined and inventory_hostname in groups['pi'] }}"
      cluster_size: "{{ groups['k8s'] | length }}"
      k8s_user: "admin" # user for dashboard
      k8s_join_command_file: '/tmp/k8s_join_command'
      kube_folder: "~/.kube"
      smtp_host: "{{ lookup('env', 'SMTP_HOST') }}"
      smtp_user: "{{ lookup('env', 'SMTP_USER') }}"
      smtp_pass: "{{ lookup('env', 'SMTP_PASS') }}"
      smtp_from: "{{ lookup('env', 'SMTP_FROM') }}"
      alert_email_receiver: "{{ lookup('env', 'ALERT_EMAIL_RECEIVER') }}"
      alert_email_receiver_nc: "{{ lookup('env', 'ALERT_EMAIL_RECEIVER_NC') }}"
      DOCKER_USER: "{{ lookup('env', 'DOCKER_USER') }}"
      DOCKER_PASS: "{{ lookup('env', 'DOCKER_PASS') }}"
  - name: Set if enable HA
    ansible.builtin.set_fact:
      is_centos7_pi: "{{ is_pi4 and os_version is regex('^7.') }}"
      is_centos9_pi: "{{ is_pi4 and os_version is regex('^9') }}"
      enable_k8s_ha_mode: "{{ cluster_size | int > 3 and K8S_HA_VIP != '' }}"

  # - name: Debug system OS
  #   ansible.builtin.debug:
  #     msg:
  #       - "OS {{ ansible_distribution }}, {{ ansible_distribution_version }}, is_centos9_pi {{ is_centos9_pi }}"

  - name: Set global variable part two
    ansible.builtin.set_fact:
      k8s_config_file: "{{ kube_folder + '/config' }}"
      k8s_api_endpoint: "{{ '' if not enable_k8s_ha_mode or K8S_API_DOMAIN == '' else K8S_API_DOMAIN + ':' + K8S_API_PORT }}"
  - name: Set global variable part three
    ansible.builtin.set_fact:
      extra_init_args: "{{ '--upload-certs --control-plane-endpoint=' + k8s_api_endpoint if k8s_api_endpoint != '' else '' }}"
